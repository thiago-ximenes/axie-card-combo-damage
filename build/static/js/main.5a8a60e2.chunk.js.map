{"version":3,"sources":["services/getAxiesByRoninAdress.js","components/AxieRoninTeam.jsx","pages/Home.js","pages/AxiesTeam.js","App.js","reportWebVitals.js","index.js"],"names":["URL_API","roninAddress","a","json","index","fetch","method","body","JSON","stringify","headers","promise","result","data","axies","results","console","log","AxieRoninTeam","props","axieInfo","image","name","Col","md","Card","style","width","Img","variant","src","Body","Row","Button","Home","useState","roninDetails","setRoninDetails","setRoninAddress","isGoButtonDisable","setGoButtonEnable","useEffect","localStorage","getItem","length","Container","className","Form","Group","Label","InputGroup","Text","Control","value","onChange","event","target","type","placeholder","xs","disabled","onClick","preventDefault","setItem","axieApi","then","map","axie","id","AxiesTeam","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a8a60e2.chunk.js","sourcesContent":["// 0x9e7339d3ef119038fb73b603d6dfbec7a21c621f\nconst URL_API = 'https://graphql-gateway.axieinfinity.com/graphql';\n\nexport default async function axieApi(roninAddress)\n{\n    const json = {\n      \"operationName\": \"GetAxieBriefList\",\n      \"variables\": {\n        \"owner\": `0x${roninAddress}`,\n      },\n      \"query\": \"query GetAxieBriefList($auctionType: AuctionType, $criteria: AxieSearchCriteria, $from: Int, $sort: SortBy, $size: Int, $owner: String) {\\n  axies(auctionType: $auctionType, criteria: $criteria, from: $from, sort: $sort, size: $size, owner: $owner) {\\n    total\\n    results {\\n      ...AxieBrief\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment AxieBrief on Axie {\\n  id\\n  name\\n  stage\\n  class\\n  breedCount\\n  image\\n  title\\n  battleInfo {\\n    banned\\n    __typename\\n  }\\n  auction {\\n    currentPrice\\n    currentPriceUSD\\n    __typename\\n  }\\n  parts {\\n    id\\n    name\\n    class\\n    type\\n    specialGenes\\n    __typename\\n  }\\n  __typename\\n}\\n\"\n    }\n    for (let index = 0; index < 3; index += 1) {\n      try {\n        const promise = await fetch(URL_API, {\n          method: 'POST',\n          body: JSON.stringify(json),\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        })\n        const result = await promise.json();\n        return result.data.axies.results;\n      } catch (error) {\n        console.log(error);\n    }\n  }\n}\n","import React from 'react';\nimport { Card, Button, Col, Row } from 'react-bootstrap';\n\nexport default function AxieRoninTeam(props) {\n\n  const { axieInfo } = props;\n  const { image, name } = axieInfo;\n\n  console.log(axieInfo);\n\n  return (\n    <Col md=\"auto\">\n      <Card style={{ width: '12rem' }}>\n        <Card.Img variant=\"top\" src={ image } />\n        <Card.Body>\n            <Row>\n              <Button variant=\"success\">Select</Button>\n            </Row>\n        </Card.Body>\n      </Card>\n    </Col>\n  )\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n// import Loader from 'react-loader-spinner';\nimport axieApi from '../services/getAxiesByRoninAdress';\nimport { Form, Container, Button, Row, Col, InputGroup } from 'react-bootstrap';\nimport AxieRoninTeam from '../components/AxieRoninTeam';\n// import { useNavigate } from 'react-router-dom';\n\nexport default function Home()\n{\n  const [roninDetails, setRoninDetails] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  const [roninAddress, setRoninAddress] = useState('');\n  const [isGoButtonDisable, setGoButtonEnable] = useState(true);\n\n  // const navigate = useNavigate();\n\n  useEffect(() => {\n    if (localStorage.getItem('roninAddress')) {\n      setRoninAddress(localStorage.getItem('roninAddress'));\n    }\n  }, [])\n\n  useEffect(() => {\n    if(roninAddress.length === 40)\n      setGoButtonEnable(false);\n    else\n      setGoButtonEnable(true);\n  }, [roninAddress])\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    localStorage.setItem('roninAddress', roninAddress);\n    axieApi(roninAddress).then((roninDetails) => setRoninDetails(roninDetails));\n    // navigate('/axie-team');\n  }\n\n  function handleOnChange (event) {\n    setRoninAddress(event.target.value);\n  }\n  \n  return (\n    <Container className=\"mt-5\">\n      <Form>\n        <Form.Group>\n          <Row><Form.Label>Enter Ronin Address</Form.Label></Row>\n          <Row>\n            <InputGroup>\n              <InputGroup.Text>ronin:</InputGroup.Text>\n            <Col>\n              <Form.Control\n                value={ roninAddress }\n                onChange={ handleOnChange }\n                type=\"text\"\n                placeholder=\"Enter Ronin Address\"\n                />\n              </Col>\n              <Col xs=\"auto\">\n              <Button\n                disabled={ isGoButtonDisable }\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={ handleSubmit }\n                >\n                Go\n              </Button>\n            </Col>\n                </InputGroup>\n          </Row>\n        </Form.Group>\n      </Form>\n      <Row className='g-3 container mt-1 justify-content-md-center' xs={1} md={3}>\n        { roninDetails.length > 0 && (\n          roninDetails.map((axie) => {\n            return (\n              <AxieRoninTeam\n                key={ axie.id }\n                axieInfo={ axie }\n              />\n            );\n          })\n        )}\n      </Row>\n    </Container>\n  );\n}\n","import React from 'react'\n\nexport default function AxiesTeam() {\n  return (\n    <div>\n      AxieTeam\n    </div>\n  )\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './pages/Home';\nimport AxiesTeam from './pages/AxiesTeam';\nimport {  HashRouter, Route, Routes } from 'react-router-dom';\n\nexport default function App() {\n  \n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={ <Home /> } />\n        <Route path=\"/axie-team\" element={ <AxiesTeam /> } />\n      </Routes>\n    </HashRouter>\n\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}